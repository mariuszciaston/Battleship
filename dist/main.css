/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{background-color:#fff;color:#000;font-family:sans-serif;font-size:16px}#wrapper{align-items:center;flex-direction:column;margin:2rem}#boards,#wrapper{display:flex;gap:2rem}#boards{flex-direction:row;flex-wrap:wrap;justify-content:center;width:100%}.board{display:grid;grid-template-columns:repeat(10,1fr);grid-template-rows:repeat(10,1fr);height:100%;max-width:480px;width:100%}.board,.cell{aspect-ratio:1/1;border:.0625rem solid #000;box-sizing:border-box}.cell{min-height:100%;min-width:100%;position:relative}.empty,.reserved,.taken{background-color:#bfbfbf}.ship,.taken{background-color:#1e90ff}.hit{background-color:red}.miss,.reserved{background-color:#fff}#secondBoard.hide .reserved,#secondBoard.hide .taken{background-color:#bfbfbf}.hit:before,.miss:before{align-items:center;display:flex;font-size:1.5rem;height:100%;justify-content:center;overflow:hidden}.hit:before{content:"x"}.miss:before{content:"â€¢"}#buttons{display:grid;gap:1rem;grid-template-columns:repeat(3,1fr);max-width:480px;width:100%}#start{grid-column:2}#randomPlacement{grid-column:3}.btn{background-color:#fff;border:.0625rem solid #000;border-radius:1rem;padding:1rem}.btn.selected{background-color:#1e90ff;color:#fff}.btn:hover{cursor:pointer}.btn:disabled{border:.0625rem solid #bfbfbf;color:#bfbfbf;cursor:not-allowed}#secondBoard:hover .empty,#secondBoard:hover .reserved,#secondBoard:hover .taken{cursor:crosshair}#secondBoard:hover .hit,#secondBoard:hover .miss{cursor:default}.wait,.wait #secondBoard:hover .empty,.wait #secondBoard:hover .hit,.wait #secondBoard:hover .miss,.wait #secondBoard:hover .reserved,.wait #secondBoard:hover .taken{cursor:wait}.ship{border:.0625rem solid #000;box-sizing:border-box;left:-.0625rem;position:absolute;top:-.0625rem;z-index:1}.draggable:hover{cursor:move;filter:brightness(125%)}.highlight{background-color:grey}.boardOutline{animation:flyInside 5s ease-in infinite}@keyframes flyInside{0%{outline:1rem solid transparent}85%{outline:1rem solid transparent}to{outline:0 solid #000}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQ0MsOEJBQ0QsQ0FFQSxHQUNDLG9CQUNELENBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlL3N0eWxlLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiaHRtbCB7XG5cdGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuXHRjb2xvcjogYmxhY2s7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbiN3cmFwcGVyIHtcblx0ZGlzcGxheTogZmxleDtcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0Z2FwOiAycmVtO1xuXHRtYXJnaW46IDJyZW07XG59XG5cbiNib2FyZHMge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogcm93O1xuXHRmbGV4LXdyYXA6IHdyYXA7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHR3aWR0aDogMTAwJTtcblx0Z2FwOiAycmVtO1xufVxuXG4uYm9hcmQge1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDAlO1xuXG5cdG1heC13aWR0aDogNDgwcHg7XG5cdG1heC13aWR0aDogNDgwcHg7XG5cblx0YXNwZWN0LXJhdGlvOiAxLzE7XG5cdGRpc3BsYXk6IGdyaWQ7XG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xuXHRncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMWZyKTtcblx0Ym9yZGVyOiBzb2xpZCAwLjA2MjVyZW0gYmxhY2s7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5jZWxsIHtcblx0bWluLXdpZHRoOiAxMDAlO1xuXHRtaW4taGVpZ2h0OiAxMDAlO1xuXHRhc3BlY3QtcmF0aW86IDEvMTtcblx0Ym9yZGVyOiBzb2xpZCAwLjA2MjVyZW0gYmxhY2s7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmVtcHR5LFxuLnJlc2VydmVkLFxuLnRha2VuIHtcblx0YmFja2dyb3VuZC1jb2xvcjogaHNsKDAsIDAlLCA3NSUpO1xufVxuXG4udGFrZW4sXG4uc2hpcCB7XG5cdGJhY2tncm91bmQtY29sb3I6IGRvZGdlcmJsdWU7XG59XG5cbi5oaXQge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5taXNzLFxuLnJlc2VydmVkIHtcblx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG5cbiNzZWNvbmRCb2FyZC5oaWRlIC5yZXNlcnZlZCxcbiNzZWNvbmRCb2FyZC5oaWRlIC50YWtlbiB7XG5cdGJhY2tncm91bmQtY29sb3I6IGhzbCgwLCAwJSwgNzUlKTtcbn1cblxuLmhpdDpiZWZvcmUsXG4ubWlzczpiZWZvcmUge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0Zm9udC1zaXplOiAxLjVyZW07XG5cdGhlaWdodDogMTAwJTtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmhpdDpiZWZvcmUge1xuXHRjb250ZW50OiAneCc7XG59XG5cbi5taXNzOmJlZm9yZSB7XG5cdGNvbnRlbnQ6ICfigKInO1xufVxuXG4jYnV0dG9ucyB7XG5cdGRpc3BsYXk6IGdyaWQ7XG5cdGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XG5cdG1heC13aWR0aDogNDgwcHg7XG5cdHdpZHRoOiAxMDAlO1xuXHRnYXA6IDFyZW07XG59XG5cbiNzdGFydCB7XG5cdGdyaWQtY29sdW1uOiAyO1xufVxuXG4jcmFuZG9tUGxhY2VtZW50IHtcblx0Z3JpZC1jb2x1bW46IDM7XG59XG5cbi5idG4ge1xuXHRib3JkZXI6IHNvbGlkIDAuMDYyNXJlbSBibGFjaztcblx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5cdHBhZGRpbmc6IDFyZW07XG5cdGJvcmRlci1yYWRpdXM6IDFyZW07XG59XG5cbi5idG4uc2VsZWN0ZWQge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBkb2RnZXJibHVlO1xuXHRjb2xvcjogd2hpdGU7XG59XG5cbi5idG46aG92ZXIge1xuXHRjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5idG46ZGlzYWJsZWQge1xuXHRjdXJzb3I6IG5vdC1hbGxvd2VkO1xuXHRib3JkZXI6IHNvbGlkIDAuMDYyNXJlbSBoc2woMCwgMCUsIDc1JSk7XG5cdGNvbG9yOiBoc2woMCwgMCUsIDc1JSk7XG59XG5cbiNzZWNvbmRCb2FyZDpob3ZlciAuZW1wdHksXG4jc2Vjb25kQm9hcmQ6aG92ZXIgLnJlc2VydmVkLFxuI3NlY29uZEJvYXJkOmhvdmVyIC50YWtlbiB7XG5cdGN1cnNvcjogY3Jvc3NoYWlyO1xufVxuXG4jc2Vjb25kQm9hcmQ6aG92ZXIgLmhpdCxcbiNzZWNvbmRCb2FyZDpob3ZlciAubWlzcyB7XG5cdGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLndhaXQgI3NlY29uZEJvYXJkOmhvdmVyIC5lbXB0eSxcbi53YWl0ICNzZWNvbmRCb2FyZDpob3ZlciAucmVzZXJ2ZWQsXG4ud2FpdCAjc2Vjb25kQm9hcmQ6aG92ZXIgLnRha2VuLFxuLndhaXQgI3NlY29uZEJvYXJkOmhvdmVyIC5oaXQsXG4ud2FpdCAjc2Vjb25kQm9hcmQ6aG92ZXIgLm1pc3Mge1xuXHRjdXJzb3I6IHdhaXQ7XG59XG5cbi53YWl0IHtcblx0Y3Vyc29yOiB3YWl0O1xufVxuXG4uc2hpcCB7XG5cdHRvcDogLTAuMDYyNXJlbTtcblx0bGVmdDogLTAuMDYyNXJlbTtcblxuXHRib3JkZXI6IHNvbGlkIDAuMDYyNXJlbSBibGFjaztcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHotaW5kZXg6IDE7XG59XG5cbi5kcmFnZ2FibGU6aG92ZXIge1xuXHRjdXJzb3I6IG1vdmU7XG5cdGZpbHRlcjogYnJpZ2h0bmVzcygxMjUlKTtcbn1cblxuLmhpZ2hsaWdodCB7XG5cdGJhY2tncm91bmQtY29sb3I6IGdyZXk7XG59XG5cbi5ib2FyZE91dGxpbmUge1xuXHRhbmltYXRpb246IGZseUluc2lkZSA1cyBpbmZpbml0ZSBlYXNlLWluO1xufVxuXG5Aa2V5ZnJhbWVzIGZseUluc2lkZSB7XG5cdDAlIHtcblx0XHRvdXRsaW5lOiAxcmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0ODUlIHtcblx0XHRvdXRsaW5lOiAxcmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuXHR9XG5cblx0MTAwJSB7XG5cdFx0b3V0bGluZTogMHJlbSBzb2xpZCBibGFjaztcblx0fVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9*/